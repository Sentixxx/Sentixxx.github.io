<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于ARM架构交叉编译libpcap库的技术指南</title>
      <link href="/posts/31746/"/>
      <url>/posts/31746/</url>
      
        <content type="html"><![CDATA[<p>以下是为您润色并添加标题后的技术文档：</p><hr /><h1 id="基于-arm-架构交叉编译-libpcap-库的技术指南"><a class="markdownIt-Anchor" href="#基于-arm-架构交叉编译-libpcap-库的技术指南"></a> 基于 ARM 架构交叉编译 libpcap 库的技术指南</h1><h2 id="一-交叉编译环境搭建"><a class="markdownIt-Anchor" href="#一-交叉编译环境搭建"></a> 一、交叉编译环境搭建</h2><h3 id="1-获取交叉编译工具链"><a class="markdownIt-Anchor" href="#1-获取交叉编译工具链"></a> 1. 获取交叉编译工具链</h3><p>推荐使用 Linaro 官方提供的 6.2 版本工具链：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">wget https://releases.linaro.org/components/toolchain/binaries/6.2-2016.11/arm-linux-gnueabihf/gcc-linaro-6.2.1-2016.11-x86_64_arm-linux-gnueabihf.tar.xz<br></code></pre></td></tr></table></figure><p>文件校验信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">SHA256: 5eb7ab2f8a0b4b960900321505cd6923a072cb3e2412102f5f72a6e74c2f0a55<br></code></pre></td></tr></table></figure><h3 id="2-配置编译环境"><a class="markdownIt-Anchor" href="#2-配置编译环境"></a> 2. 配置编译环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 解压工具链</span><br>tar -xvf gcc-linaro-6.2.1-2016.11-x86_64_arm-linux-gnueabihf.tar.xz<br><br><span class="hljs-comment"># 添加至环境变量</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/path/to/gcc-linaro-6.2.1-2016.11-x86_64_arm-linux-gnueabihf/bin<br><br><span class="hljs-comment"># 验证编译器状态</span><br>arm-linux-gnueabihf-gcc -v<br></code></pre></td></tr></table></figure><h2 id="二-libpcap-编译流程"><a class="markdownIt-Anchor" href="#二-libpcap-编译流程"></a> 二、libpcap 编译流程</h2><h3 id="1-准备编译环境"><a class="markdownIt-Anchor" href="#1-准备编译环境"></a> 1. 准备编译环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /path/to/libpcap-src<br><br><span class="hljs-comment"># 清理历史编译产物</span><br>make clean<br><br><span class="hljs-comment"># 安装依赖工具</span><br><span class="hljs-built_in">sudo</span> apt install -y gcc flex byacc<br></code></pre></td></tr></table></figure><h3 id="2-配置编译参数"><a class="markdownIt-Anchor" href="#2-配置编译参数"></a> 2. 配置编译参数</h3><p>根据工具链输出确定目标平台（示例为 arm-linux-gnueabihf）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">./configure --host=arm-linux-gnueabihf<br></code></pre></td></tr></table></figure><h3 id="3-执行编译安装"><a class="markdownIt-Anchor" href="#3-执行编译安装"></a> 3. 执行编译安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">make -j$(<span class="hljs-built_in">nproc</span>)<br><br><span class="hljs-comment"># 可选安装至系统目录</span><br><span class="hljs-built_in">sudo</span> make install<br></code></pre></td></tr></table></figure><p>编译产物路径：</p><ul><li>临时产物：当前目录下的 <code>.so</code> 文件</li><li>系统安装：<code>/usr/local/lib</code></li></ul><h2 id="三-部署与符号链接处理"><a class="markdownIt-Anchor" href="#三-部署与符号链接处理"></a> 三、部署与符号链接处理</h2><h3 id="1-目标设备部署"><a class="markdownIt-Anchor" href="#1-目标设备部署"></a> 1. 目标设备部署</h3><p>将生成的 <code>libpcap.so.1.10.5</code> 上传至目标设备的 <code>/root/pcap/</code> 目录</p><h3 id="2-创建兼容性符号链接"><a class="markdownIt-Anchor" href="#2-创建兼容性符号链接"></a> 2. 创建兼容性符号链接</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /root/pcap/libpcap.so.1.10.5 /root/pcap/wpcap.so<br></code></pre></td></tr></table></figure><h3 id="3-验证依赖关系"><a class="markdownIt-Anchor" href="#3-验证依赖关系"></a> 3. 验证依赖关系</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ldd /root/pcap/wpcap.so<br></code></pre></td></tr></table></figure><h2 id="四-常见问题排查"><a class="markdownIt-Anchor" href="#四-常见问题排查"></a> 四、常见问题排查</h2><h3 id="1-共享库加载失败问题"><a class="markdownIt-Anchor" href="#1-共享库加载失败问题"></a> 1. 共享库加载失败问题</h3><p>典型错误信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">[ERROR] Unable to load shared library &#x27;wpcap&#x27; or its dependencies<br></code></pre></td></tr></table></figure><p>解决方案：</p><ul><li>确认符号链接路径正确</li><li>检查 LD_LIBRARY_PATH 是否包含库目录</li><li>参考官方问题跟踪：<a href="https://github.com/dotpcap/sharppcap/issues/543">https://github.com/dotpcap/sharppcap/issues/543</a></li></ul><h2 id="五-技术原理说明"><a class="markdownIt-Anchor" href="#五-技术原理说明"></a> 五、技术原理说明</h2><ol><li><p>符号链接必要性：SharpPcap 库为保持跨平台兼容性，在 Linux 环境下需通过 <code>wpcap.so</code> 别名访问 libpcap 实现</p></li><li><p>交叉编译要点：</p><ul><li><code>--host</code> 参数指定目标平台 ABI</li><li>工具链需与目标设备 glibc 版本匹配</li><li>建议使用静态链接或携带依赖库</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
            <tag> 经验 </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP同步服务静默崩溃故障分析：SIGPIPE信号与TCP半关闭状态的致命陷阱</title>
      <link href="/posts/63310/"/>
      <url>/posts/63310/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h1><h2 id="故障情景"><a class="markdownIt-Anchor" href="#故障情景"></a> 故障情景</h2><ul><li>业务背景：<ul><li>技术栈：C++线程池 + FTP 协议长连接</li><li>分布式系统中的文件 FTP 同步服务</li></ul></li><li>故障描述：<ul><li>本地FTP目录同步服务存在非正常进程终止缺陷。当远程FTP服务器发生非计划性停机（服务崩溃/网络中断/强制kill进程）时，本地同步进程发生静默崩溃（无退出状态码、无异常抛出）</li></ul></li></ul><h2 id="故障分析"><a class="markdownIt-Anchor" href="#故障分析"></a> 故障分析</h2><p>首先通过打印的 LOG 信息，快速定位到了 tcpSocket 的 <code>Send()</code> 方法中，<code>Send()</code> 方法的实现如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">ssize_t</span> <span class="hljs-title">TcpSocket::Send</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">void</span> *buf, <span class="hljs-type">int</span> len)</span> <span class="hljs-type">const</span> </span>&#123;<br>  <span class="hljs-keyword">if</span> (!connected_) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> ::<span class="hljs-built_in">write</span>(skt_, buf, len);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="添加-try-catch-语句"><a class="markdownIt-Anchor" href="#添加-try-catch-语句"></a> 添加 try-catch 语句</h3><p>首先先对其添加了 try-catch 语句尝试捕获异常，发现程序仍然直接退出<br /><strong>事后查阅资料发现，POSIX 的系统调用的错误以返回值出现，因此这里 try-catch 完全无效，应该针对返回值进行 DEBUG</strong></p><h3 id="查看系统内核-log"><a class="markdownIt-Anchor" href="#查看系统内核-log"></a> 查看系统内核 LOG</h3><p>既然程序直接退出，没有任何错误出现，这里怀疑有可能是程序抛出错误到了内核层 (程序运行在一个定制版的 Linux 系统上)，使用 <code>dmesg</code> 查看内核日志，发现不存在任何相关的错误。<br />于是尝试更换运行环境，编译到了另一台设备上，发现仍然出现这个错误。</p><h3 id="使用-vscode-debugger-进行单步调试"><a class="markdownIt-Anchor" href="#使用-vscode-debugger-进行单步调试"></a> 使用 VSCode Debugger 进行单步调试</h3><p>在 <code>Send()</code> 处打上了断点，经过调试发现这里出现了 <code>Broken PIPE Error</code>，上网进行相关搜索，得知这是一个信号的相关问题。</p><blockquote><p>对一个对端已经关闭的socket调用两次write, 第二次将会生成SIGPIPE信号, 该信号默认结束进程。</p></blockquote><h1 id="tcp-过程详解"><a class="markdownIt-Anchor" href="#tcp-过程详解"></a> TCP 过程详解</h1><p>当远程 FTP 服务端发生非正常断开时，TCP 连接状态变化时序：</p><ol><li><strong>正常建立连接阶段</strong><br />本地客户端与服务端完成三次握手，<code>connected_</code> 标志为 <code>true</code></li><li><strong>服务端异常中断阶段</strong><br />服务端进程被强制 kill 或发生网络中断：<ul><li>服务端未发送 FIN：直接触发 RST（如进程被 kill）</li><li>服务端发送 FIN：进入四次挥手流程（如正常关闭）</li></ul></li><li><strong>客户端首次发送数据阶段</strong><br />当本地线程池中的工作线程调用 <code>TcpSocket::Send()</code> 时：<ul><li>若连接已收到 RST：<ul><li>第一次 <code>::write()</code> 将返回 <code>-1</code>，<code>errno=ECONNRESET</code></li></ul></li><li>若连接处于半关闭状态（收到 FIN）：<ul><li>第一次 <code>::write()</code> 成功返回（数据进入发送缓冲区）</li><li>第二次 <code>::write()</code> 触发 <code>SIGPIPE</code>（内核检测到无效写入）</li></ul></li></ul></li></ol><h2 id="半关闭状态"><a class="markdownIt-Anchor" href="#半关闭状态"></a> 半关闭状态</h2><p>半关闭状态（Half-Close State）是 TCP 协议栈实现的特殊连接状态，其特征表现为：<strong>通信双方中某一端主动关闭数据发送通道，同时保持数据接收通道开放</strong>。这种机制使得 TCP 连接具备非对称数据传输能力，类似现实中的单行道交通模式。</p><h2 id="技术原理剖析"><a class="markdownIt-Anchor" href="#技术原理剖析"></a> 技术原理剖析</h2><h3 id="全双工信道解构"><a class="markdownIt-Anchor" href="#全双工信道解构"></a> 全双工信道解构</h3><p>TCP 协议的全双工特性本质上是将物理信道虚拟划分为两条独立的单工信道：</p><ol><li><strong>发送信道</strong><ul><li>本地端口 → 远程端口</li><li>由本地端点完全控制</li></ul></li><li><strong>接收信道</strong><ul><li>远程端口 → 本地端口</li><li>由远程端点完全控制</li></ul></li></ol><h3 id="操作指令不可见性"><a class="markdownIt-Anchor" href="#操作指令不可见性"></a> 操作指令不可见性</h3><p>TCP 协议栈存在以下重要设计特征：</p><ul><li><strong>系统调用屏蔽</strong>：无法通过协议层直接判断对端调用的是：<ul><li><code>close()</code>：完全关闭套接字（双通道）</li><li><code>shutdown(SHUT_WR)</code>：仅关闭发送通道</li></ul></li></ul><table><thead><tr><th>操作</th><th>系统调用层面</th><th>协议层表现</th><th>文件描述符状态</th></tr></thead><tbody><tr><td><strong><code>close()</code></strong></td><td>释放文件描述符引用计数</td><td>当引用计数归零时发送 FIN</td><td>彻底销毁</td></tr><tr><td><strong><code>shutdown(SHUT_WR)</code></strong></td><td>立即关闭发送通道（无视引用计数）</td><td>立即发送 FIN</td><td>保留可用</td></tr></tbody></table><h2 id="sigpipe-的产生条件"><a class="markdownIt-Anchor" href="#sigpipe-的产生条件"></a> SIGPIPE 的产生条件</h2><p>由于 TCP 是全双工通道，因此在应用层来看，即使对端调用了 <code>close()</code> 也只能关闭对方的发送信道，我方仍能发送数据。<br />当对端 close 一个连接时，若本地接着发数据。根据 TCP 协议的规定，会收到一个 RST 响应，本地再往对端发送数据时，系统会发出一个 <code>SIGPIPE</code> 信号给进程，告诉进程这个连接已经断开了，不要再写了。</p><blockquote><p>对一个已经收到FIN包的socket调用read方法, 如果接收缓冲已空, 则返回0, 这就是常说的表示连接关闭. 但第一次对其调用write方法时, 如果发送缓冲没问题, 会返回正确写入(发送). 但发送的报文会导致对端发送RST报文, 因为对端的socket已经调用了close, 完全关闭, 既不发送, 也不接收数据. 所以, 第二次调用write方法(假设在收到RST之后), 会生成SIGPIPE信号, 导致进程退出.</p></blockquote><h1 id="修复"><a class="markdownIt-Anchor" href="#修复"></a> 修复</h1><p>在原有的基础上添加了链接的检查机制</p><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">ssize_t</span> <span class="hljs-title">TcpSocket::Send</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">void</span> *buf, <span class="hljs-type">int</span> len)</span> </span>&#123;<br>  <span class="hljs-keyword">if</span> (!connected_) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-type">ssize_t</span> ret = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">struct</span> <span class="hljs-title class_">pollfd</span> pollfd;<br>  pollfd.fd = skt_;<br>  pollfd.events = POLLOUT;<br>  <span class="hljs-type">int</span> poll_result = <span class="hljs-built_in">poll</span>(&amp;pollfd , <span class="hljs-number">1</span> , <span class="hljs-number">1000</span>);<br>  <span class="hljs-keyword">if</span> (poll_result == <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-comment">// timeout can not write</span><br>    <span class="hljs-built_in">Close</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((pollfd.revents &amp; (POLLERR | POLLHUP | POLLNVAL)) &gt; <span class="hljs-number">0</span> ||<br>    poll_result &lt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-built_in">Close</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>  ret = ::<span class="hljs-built_in">write</span>(skt_, buf, len);<br>  &#125;<br>  <span class="hljs-keyword">return</span> ret;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="反思与更多的改进"><a class="markdownIt-Anchor" href="#反思与更多的改进"></a> 反思与更多的改进</h1><h2 id="线程池对信号的处理机制"><a class="markdownIt-Anchor" href="#线程池对信号的处理机制"></a> 线程池对信号的处理机制</h2><p><strong>统一信号处理器</strong></p><ul><li>在进程启动时注册全局信号处理函数（如 <code>SIGPIPE/SIGSEGV</code>），禁止在线程池工作线程中单独设置信号处理，避免不可控行为<br /><strong>线程信号屏蔽</strong></li><li>使用 <code>pthread_sigmask</code> 屏蔽工作线程对关键信号的响应，仅允许主线程处理信号</li></ul><h2 id="日志监控增强"><a class="markdownIt-Anchor" href="#日志监控增强"></a> 日志监控增强</h2><p>应当增加系统调用错误日志与线程池事件日志</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
            <tag> 网络 </tag>
            
            <tag> DEBUG </tag>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL2 配置 tensorflow 环境</title>
      <link href="/posts/9832/"/>
      <url>/posts/9832/</url>
      
        <content type="html"><![CDATA[<h2 id="windows-系统中更新-nvida-驱动"><a class="markdownIt-Anchor" href="#windows-系统中更新-nvida-驱动"></a> Windows 系统中更新 NVIDA 驱动</h2><p>这里可以直接通过 Geforce Experience 直接更新</p><p>更新完成后可以在命令行/wsl 中输入 <code>nvidia-smi</code></p><p>可以看到输出</p><p><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20240317172921071.png" alt="image-20240317172921071.png" /></p><p>这里的 CUDA Version 指的是该驱动版本最高可支持的 CUDA 版本</p><h2 id="安装-cuda"><a class="markdownIt-Anchor" href="#安装-cuda"></a> 安装 CUDA</h2><p>到 <a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=WSL-Ubuntu&amp;target_version=2.0&amp;target_type=deb_local">NVIDIA官网</a>下载符合条件的 CUDA</p><p><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20240317172200178.png" alt="image-20240317172200178.png" /></p><p>这里我一开始直接选择安装了最新版的 CUDA 12.4，随后发现 Tensorflow 目前 (2024.3.17) 并不支持 12.4，于是重新安装，选择了 CUDA 11.2</p><p><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20240317172422147.png" alt="image-20240317172422147.png" /></p><p><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20240317172500352.png" alt="image-20240317172500352.png" /></p><p>直接下载 EXE 版本安装即可</p><p>在安装时，会发现安装报错 <code>cuda you already have a newer version of the nvidia frameview sdk installed</code></p><p>这里需要到系统设置里卸载<strong>NVIDIA frameview sdk</strong> 组件，我使用的是 <a href="https://geekuninstaller.com/download">Geek</a> 进行卸载，很干净</p><p><strong>注意：不要直接到 NVIDIA 文件夹删除对应文件</strong></p><h2 id="下载-anaconda"><a class="markdownIt-Anchor" href="#下载-anaconda"></a> 下载 ANACONDA</h2><p>到<a href="https://repo.anaconda.com/archive/">最新下载地址</a>找到对应的 ANACONDA 版本，复制链接</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">https://www.anaconda.com/products/distribution#linux<br>wget https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh<br>bash ./Anaconda3-2021.11-Linux-x86_64.sh<br></code></pre></td></tr></table></figure><p>根据脚本说明安装并编辑环境变量</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">export PATH=&quot;/path/to/conda/bin:$PATH&quot;<br></code></pre></td></tr></table></figure><p>使用 <code>conda init</code> 进行初始化</p><h3 id="wsl-中下载-cuda-toolkit"><a class="markdownIt-Anchor" href="#wsl-中下载-cuda-toolkit"></a> WSL 中下载 CUDA TOOLKIT</h3><p>前往官网找到对应版本的 TOOLKIT：<a href="https://developer.nvidia.com/cuda-toolkit-archive">https://developer.nvidia.com/cuda-toolkit-archive</a></p><p>复制官网指令进行安装</p><p><strong>注意：如果不是最新版本，需要将最后一行修改为对应的版本号</strong></p><h3 id="错误处理"><a class="markdownIt-Anchor" href="#错误处理"></a> 错误处理</h3><p>这里如果之前安装过不同版本的 TOOLKIT，可能会报错</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">Errors were encountered while processing:<br> /tmp/apt-dpkg-install-vFgFO4/00-cuda-cudart-11-2_11.2.72-1_amd64.deb<br>E: Sub-process /usr/bin/dpkg returned an error code (1)<br></code></pre></td></tr></table></figure><p>这里需要卸载已有的 CUDA TOOLKIT</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo dpkg --force-all -P $(dpkg -l | grep cuda | awk &#x27;&#123;print $2&#125;&#x27;)<br></code></pre></td></tr></table></figure><p>发现报错：</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">Removing cuda-toolkit-12-4-config-common (12.4.99-1) ...<br>Removing alternatives<br>Purging configuration files for cuda-toolkit-12-4-config-common (12.4.99-1) ...<br>Removing alternatives<br>Processing triggers for libc-bin (2.31-0ubuntu9.14) ...<br>/sbin/ldconfig.real: /usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link<br></code></pre></td></tr></table></figure><p>运行 <code>   ls -l /usr/lib/wsl/lib/libcuda.so*</code></p><p>发现对应文件不是一个符号链接</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">-r-xr-xr-x 1 root root 162552 Mar  2 07:04 /usr/lib/wsl/lib/libcuda.so<br>-r-xr-xr-x 1 root root 162552 Mar  2 07:04 /usr/lib/wsl/lib/libcuda.so.1<br>-r-xr-xr-x 1 root root 162552 Mar  2 07:04 /usr/lib/wsl/lib/libcuda.so.1.1<br></code></pre></td></tr></table></figure><p>删除错误的 <code>libcuda.so.1</code> 文件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo rm /usr/lib/wsl/lib/libcuda.so.1<br></code></pre></td></tr></table></figure><p>创建一个新的符号链接，使 <code>libcuda.so.1</code> 指向具体版本的文件，如 <code>libcuda.so.1.1</code>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo ln -s /usr/lib/wsl/lib/libcuda.so.1.1 /usr/lib/wsl/lib/libcuda.so.1<br></code></pre></td></tr></table></figure><p>运行 <code>ldconfig</code> 来更新库的缓存信息：</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo ldconfig<br></code></pre></td></tr></table></figure><p>使用</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo apt-get autoremove<br>sudo apt-get autoclean<br></code></pre></td></tr></table></figure><p>清理本地存储库里的软件包信息</p><p>重新安装即可</p><h2 id="安装-cudnn"><a class="markdownIt-Anchor" href="#安装-cudnn"></a> 安装 cuDNN</h2><p>还是一样，找到对应的安装文件：<a href="https://developer.nvidia.com/rdp/cudnn-archive%EF%BC%8C%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%90%8E%E6%89%8D%E8%83%BD%E4%B8%8B%E8%BD%BD">https://developer.nvidia.com/rdp/cudnn-archive，这里需要注册登录后才能下载</a></p><p>使用 windows 下载完成后移动到 Ubuntu 系统中。WLS 2 中：</p><ul><li>Linux 文件系统被映射到\wsl$\Ubuntu-20.04\</li><li>Windows 的磁盘被挂载到了/mnt 下，可以直接访问</li></ul><p>完成后通过 <code>sudo dpkg -i NAME</code> 即可安装</p><h2 id="使用-conda-建立对应版本的-python-虚拟环境"><a class="markdownIt-Anchor" href="#使用-conda-建立对应版本的-python-虚拟环境"></a> 使用 conda 建立对应版本的 python 虚拟环境</h2><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">conda create --name myenv python=3.8<br>conda activate myenv<br></code></pre></td></tr></table></figure><p>之后即可使用对应指令安装对应版本的 TensorFlow</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">pip install tensorflow-gpu==2.11.0<br></code></pre></td></tr></table></figure><h2 id="jupyter"><a class="markdownIt-Anchor" href="#jupyter"></a> Jupyter</h2><p><code>pip install jupyterlab</code></p><p>使用如下命令启动 jupyter lab：<code>jupyter lab --no-browser</code></p><h3 id="测试-tensorflow"><a class="markdownIt-Anchor" href="#测试-tensorflow"></a> 测试 tensorflow</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">import tensorflow as tf<br>tf.config.list_physical_devices()<br></code></pre></td></tr></table></figure><p>发现报错</p><p><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20240317173159625.png" alt="image-20240317173159625.png" /></p><p>在 windows 桌面右键打开 NVIDIA 控制面板</p><p><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20240317173236552.png" alt="image-20240317173236552.png" /></p><p>将 PhysX 设置修改为指定显卡</p><p><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20240317173257487.png" alt="image-20240317173257487.png" /></p><p>成功解决</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验 </tag>
            
            <tag> 安装 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Nexus的第三方Nuget源搭建</title>
      <link href="/posts/7519/"/>
      <url>/posts/7519/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Nexus 是支持 Nuget、Docker、Npm 等多种包的仓库管理器，可用做私有包的存储分发，缓存官方包。<br /><a href="https://help.sonatype.com/en/sonatype-nexus-repository.html">https://help.sonatype.com/en/sonatype-nexus-repository.html</a></p></blockquote><h1 id="环境需求"><a class="markdownIt-Anchor" href="#环境需求"></a> 环境需求</h1><ul><li>Docker</li></ul><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><ol><li>创建数据挂载目录并赋予权限 <code>mkdir data &amp;&amp; chown -R 200 data</code></li><li>创建 docker-compose. Yml 文件</li></ol><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.1&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">nexus:</span><br>  <span class="hljs-comment"># 这里使用latest可能拉不动</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">m.daocloud.io/docker.io/sonatype/nexus3:3.61.0</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">nexus3</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">environment:</span><br>    <span class="hljs-comment"># Nexus 上下文路径</span><br>       <span class="hljs-attr">NEXUS_CONTEXT:</span> <span class="hljs-string">/</span>       <br>    <span class="hljs-comment"># 指定jvm参数</span><br>       <span class="hljs-attr">INSTALL4J_ADD_VM_PARAMS:</span> <span class="hljs-string">-Xms1g</span> <span class="hljs-string">-Xmx1g</span> <span class="hljs-string">-XX:MaxDirectMemorySize=3g</span><br>    <span class="hljs-attr">volumes:</span><br>    <span class="hljs-comment"># 本地挂载数据</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">./data:/nexus-data</span><br>    <span class="hljs-attr">ports:</span><br>    <span class="hljs-comment"># 端口映射</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8081:8081&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">nexusnetwork</span><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">nexusnetwork:</span><br>    <span class="hljs-attr">external:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><ol start="3"><li>运行 <code>docker compose up -d</code></li><li><strong>等待片刻</strong>，nexus 需要时间构建，在此期间访问可能导致 apache 2 占用 8081 接口</li><li>访问 <code>http://$&#123;server_address&#125;:8081</code> 即可</li><li>右上角 Login，管理员默认登录密码在 <code>data/admin.password</code>，这里使用 admin + admin. Password 登录后会提示修改密码，<strong>修改后 admin. Password 文件会直接被删除，不要使用原密码!!</strong></li><li>提示可以禁止匿名访问，这样仅有授权用户可以访问资源</li></ol><h1 id="nuget-配置"><a class="markdownIt-Anchor" href="#nuget-配置"></a> Nuget  配置</h1><h2 id="仓库说明"><a class="markdownIt-Anchor" href="#仓库说明"></a> 仓库说明</h2><p>Nexus 有三个默认仓库</p><ul><li>Nuget-group：组合存储库，可以将多个远程或本地存储库组合成一个虚拟存储库，默认包含 nuget-hosted，nuget. Org-proxy。拉取包的地址一般配置此仓库地址</li><li>Nuget-hosted：托管存储库，本地发布的包可以存储到此存储库。推送包的地址需要配置此仓库地址</li><li>Nuget. Org-proxy：代理存储库，缓存 nuget. Org 的包并从本地服务器上提供它们</li></ul><h2 id="权限配置"><a class="markdownIt-Anchor" href="#权限配置"></a> 权限配置</h2><ul><li>点击齿轮可进入设置，在 Roles 中可创建角色，Users 中可创建用户，可以为角色分配相应的不同权限，角色之间也可以互相包含</li></ul><h2 id="nuget-秘钥"><a class="markdownIt-Anchor" href="#nuget-秘钥"></a> Nuget 秘钥</h2><ul><li>点击右上角的 User 图标，可以看到左边第二栏 Nuget API Key<br /><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20250114174013491.png" alt="image-20250114174013491.png" /></li></ul><p>点击 Access API Key，按照提示即可<br /><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20250114174036710.png" alt="image-20250114174036710.png" /></p><p>此时秘钥无法直接使用，需要在设置 Security-&gt; Realms 中启用 NuGet API-Key Realm<br /><a href="https://help.sonatype.com/en/realms.html#Realms-NuGetAPI-KeyRealm">https://help.sonatype.com/en/realms.html#Realms-NuGetAPI-KeyRealm</a><br /><img src="https://raw.githubusercontent.com/Sentixxx/st-pic-base/main/pic/image-20250114174142845.png" alt="image-20250114174142845.png" /></p><h2 id="设置部署策略"><a class="markdownIt-Anchor" href="#设置部署策略"></a> 设置部署策略</h2><p>默认 nuget 包托管是启用了，而为了防止包被恶意篡改，可以将 nuget-hosted 仓库修改为禁用重新部署，多人协同开发时可防止包被被其他人覆盖。在设置了禁用重新部署时，推送重复包的时候将会返回 400 错误<br /><a href="https://help.sonatype.com/en/namespace-confusion-protection.html#NamespaceConfusionProtection-ConfigureNexusRepository3">https://help.sonatype.com/en/namespace-confusion-protection.html#NamespaceConfusionProtection-ConfigureNexusRepository3</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
            <tag> 经验 </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次个人博客的安装配置(Obsidian + Hexo + Github Page)</title>
      <link href="/posts/44007/"/>
      <url>/posts/44007/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo"><a class="markdownIt-Anchor" href="#hexo"></a> Hexo</h1><p>首先进行工具的安装 <code>npm install -g hexo-cli</code></p><p>找一个文件夹，执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">hexo init &lt;folder&gt;<br><span class="hljs-built_in">cd</span> &lt;folder&gt;<br>npm i<br></code></pre></td></tr></table></figure><p>输入 <code>hexo generate</code> 即可生成静态文件<br />输入 <code>hexo server</code> ，即可在本地访问界面</p><h2 id="设置远端仓库托管"><a class="markdownIt-Anchor" href="#设置远端仓库托管"></a> 设置远端仓库托管</h2><p>GitHub 上建立一个仓库<br />在 hexo 的 folder 打开命令行</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git init<br>git remote add origin &lt;url&gt;<br>git add .<br>git commit -m <span class="hljs-string">&quot;Initial commit&quot;</span><br>git push -u origin master<br></code></pre></td></tr></table></figure><h1 id="github-page"><a class="markdownIt-Anchor" href="#github-page"></a> Github Page</h1><p>同样建立一个仓库，这里需要命名为 <code>&#123;username&#125;.github.io</code></p><ul><li>这是因为 GitHub Pages 具有两种基本的类型：用户/组织页面 (User/Organization Pages) 和项目页面 (Project Pages)<ul><li>用户/组织页面使用一个专门的仓库存放文件，这个仓库必须以你的用户名命名，规则如下：<ul><li>仓库名称必须符合 <code>&lt;username&gt;.github.io</code> 的模式。</li><li>该仓库 <code>master</code> 分支的内容才会用来构建你的 GitHub Pages。</li></ul></li><li>你只能使用自己的用户名来建立用户/组织页面的仓库，形如 <code>joe/bob.github.io</code> 这样的仓库是不行的。</li><li>当用户页面建好之后，可以使用 <code>http(s)://&lt;username&gt;.github.io</code> 来访问。</li></ul></li></ul><p>在 <a href="https://github.com/settings/tokens">Token生成界面</a>选择 “Generate New Token (Classic)”</p><ul><li>选择一个过期时间</li><li>Select Scopes 勾选 repo 中的所有选项</li><li>Generate Token</li></ul><p>复制生成的 Token，注意这里不要直接关闭网页，这个 Token 关闭网页后就会不可见。<br />在托管 hexo folder 的仓库界面打开设置，“Security-&gt; Secret and Variables -&gt; Actions”，新建一个 Respository Secret，将刚刚得到的 Token 粘贴进内容，给它一个名字，这里我叫 ACCESS_TOKEN</p><h2 id="配置-github-workflow"><a class="markdownIt-Anchor" href="#配置-github-workflow"></a> 配置 Github Workflow</h2><p>在 hexo folder 打开 .github 文件夹，新建一个文件夹 workflows，然后创建一个 yml 文件，粘贴如下内容</p><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Blog</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">source</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v4</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">submodules:</span> <span class="hljs-string">&#x27;true&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node.js</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v4</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&#x27;22&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Environment</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>          <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">hexo-cli</span><br>          <span class="hljs-string">npm</span> <span class="hljs-string">ci</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-string">pages</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>          <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span><br>          <span class="hljs-string">ls</span> <span class="hljs-string">-R</span> <span class="hljs-string">public/</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">to</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Pages</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>          <span class="hljs-string">cd</span> <span class="hljs-string">./public</span><br>          <span class="hljs-string">git</span> <span class="hljs-string">init</span><br>          <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.name</span> &#123;<span class="hljs-string">username</span>&#125;<br>          <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.email</span> &#123;<span class="hljs-string">useremai</span>&#125;<br>          <span class="hljs-string">git</span> <span class="hljs-string">add</span> <span class="hljs-string">.</span><br>          <span class="hljs-string">git</span> <span class="hljs-string">commit</span> <span class="hljs-string">-m</span> <span class="hljs-string">&quot;$<span class="hljs-template-variable">&#123;&#123; github.event.head_commit.message &#125;&#125;</span> $(date &#x27;+%Z %Y-%m-%d %H:%M:%S&#x27;) Updated By Github Actions&quot;</span><br>          <span class="hljs-string">git</span> <span class="hljs-string">push</span> <span class="hljs-string">--force</span> <span class="hljs-string">--quiet</span> <span class="hljs-string">&quot;https://$<span class="hljs-template-variable">&#123;&#123; secrets.ACESS_TOKEN &#125;&#125;</span>@github.com/&#123;username&#125;/&#123;username&#125;.github.io.git&quot;</span> <span class="hljs-string">master:main</span><br></code></pre></td></tr></table></figure><p>修改 <code>_config. yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;git&#x27;</span><br><span class="hljs-attr">repository:</span> <span class="hljs-string">https://github.com/&#123;username&#125;/&#123;username&#125;.github.io.git</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>提交修改到仓库，就可以看见一个 Action 正在运行，等待片刻后访问之前的个人主页，就可以看到博客界面了。</p><h2 id="配置个人主题"><a class="markdownIt-Anchor" href="#配置个人主题"></a> 配置个人主题</h2><p>这里选用了 <a href="https://github.com/next-theme/hexo-theme-next.git">Next</a> 作为主题，首先需要 fork 上游的仓库，这是因为在我们的 workflow 中会同步子模块，因此如果想要对主题做配置，就需要对仓库的内容进行修改，所以这里 fork 了一个自己的版本便于追踪修改与版本更新</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">git clone &lt;url&gt; themes/next<br>git add .<br>git rm --cached -f themes/next<br>git submodule add &lt;url&gt; themes/next<br></code></pre></td></tr></table></figure><p>分别对两个仓库进行提交，就可以看到主题更新了</p><h2 id="rss-配置"><a class="markdownIt-Anchor" href="#rss-配置"></a> RSS 配置</h2><p>在项目根目录下安装 hexo-generator-feed</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install hexo-generator-feed --save<br></code></pre></td></tr></table></figure><p>修改项目根目录的_config. Yml，插件添加 hexo-generator-feed，设置 feed 属性</p><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">Plugins:</span> <span class="hljs-string">hexo-generator-feed</span><br><span class="hljs-comment"># Feed Atom</span><br><span class="hljs-attr">feed:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">atom</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">atom.xml</span><br>    <span class="hljs-attr">limit:</span> <span class="hljs-number">20</span><br>    <span class="hljs-attr">hub:</span><br>    <span class="hljs-attr">content:</span><br>    <span class="hljs-attr">content_limit:</span> <span class="hljs-number">140</span><br>    <span class="hljs-attr">content_limit_delim:</span> <span class="hljs-string">&quot; &quot;</span><br>    <span class="hljs-attr">order_by:</span> <span class="hljs-string">-date</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">/images/favicon_200x200.png</span><br></code></pre></td></tr></table></figure><p>修改主题根目录的_config. Yml，添加 RSS 订阅入口</p><ul><li>修改<strong>social</strong>节点，添加一行启用 RSS 图标</li></ul><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">social:</span><br><span class="hljs-comment"># 其他社交按钮</span><br><span class="hljs-attr">RSS:</span> <span class="hljs-string">/atom.xml</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-rss</span><br></code></pre></td></tr></table></figure><ul><li>修改<strong>follow_me</strong>节点，开启 RSS 订阅入口</li></ul><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">follow_me:</span><br><span class="hljs-comment"># 其他社交按钮</span><br><span class="hljs-attr">RSS:</span> <span class="hljs-string">/atom.xml</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-rss</span><br></code></pre></td></tr></table></figure><h1 id="obsidian"><a class="markdownIt-Anchor" href="#obsidian"></a> Obsidian</h1><p>综合调研了网上的各种 Obsidian 方案，始终没有找到满意的，于是决定自己搞</p><p>既然已经通过 Github 托管了博客，我们也希望一起将 Obsidian 中的文档托管</p><h2 id="obsidian-git"><a class="markdownIt-Anchor" href="#obsidian-git"></a> Obsidian Git</h2><p>可以下载 Obsidian 中的插件 Git，很多博客中都叫 Obsidian Git，因为 Obisidian 的规则原因，现在已经改名叫 Git，配置过程大同小异这里就不多讲了。<br />在配置好 Obisidian 的 Git 仓库后，我们将其添加为 Hexo 仓库的子模块</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git submodule addd &lt;url&gt; <span class="hljs-built_in">source</span><br></code></pre></td></tr></table></figure><p>再通过修改 Hexo 的配置来排除一些你不希望渲染的文件，这里可以参考 Hexo 的配置规则，如下所示</p><h2 id="hexo-配置规则"><a class="markdownIt-Anchor" href="#hexo-配置规则"></a> Hexo 配置规则</h2><h3 id="包括或不包括目录和文件"><a class="markdownIt-Anchor" href="#包括或不包括目录和文件"></a> 包括或不包括目录和文件</h3><p>使用以下选项可明确处理或忽略某些文件/文件夹。 可以使用 <a href="https://github.com/micromatch/micromatch#extended-globbing">glob 表达式</a> 进行路径匹配。</p><p><code>include</code> 和 <code>exclude</code> 选项只会应用到 <code>source/</code> ，而 <code>ignore</code> 选项会应用到所有文件夹.</p><table><thead><tr><th>设置</th><th>描述</th></tr></thead><tbody><tr><td><code>include</code></td><td>包含隐藏文件（包括名称以下划线开头的文件/文件夹，* 除外）</td></tr><tr><td><code>exclude</code></td><td>排除文件或文件夹</td></tr><tr><td><code>ignore</code></td><td>忽略文件/文件夹</td></tr></tbody></table><p>例如：</p><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 处理或不处理目录或文件  </span><br><span class="hljs-attr">include:</span>  <br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;.nojekyll&quot;</span>  <br>  <span class="hljs-comment"># 处理 &#x27;source/css/_typing.css&#x27;  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;css/_typing.css&quot;</span>  <br>  <span class="hljs-comment"># 处理 &#x27;source/_css/&#x27; 中的任何文件，但不包括子目录及其其中的文件。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;_css/*&quot;</span>  <br>  <span class="hljs-comment"># 处理 &#x27;source/_css/&#x27; 中的任何文件和子目录下的任何文件。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;_css/**/*&quot;</span>  <br>  <br><span class="hljs-attr">exclude:</span>  <br>  <span class="hljs-comment"># 不处理 &#x27;source/js/test.js&#x27;。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;js/test.js&quot;</span>  <br>  <span class="hljs-comment"># 不处理 &#x27;source/js/&#x27; 中的文件、但包括子目录下的所有目录和文件。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;js/*&quot;</span>  <br>  <span class="hljs-comment"># 不处理 &#x27;source/js/&#x27; 中的文件和子目录下的任何文件。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;js/**/*&quot;</span>  <br>  <span class="hljs-comment"># 不处理 &#x27;source/js/&#x27; 目录下的所有文件名以 &#x27;test&#x27; 开头的文件，但包括其它文件和子目录下的单文件。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;js/test*&quot;</span>  <br>  <span class="hljs-comment"># 不处理 &#x27;source/js/&#x27; 及其子目录中任何以 &#x27;test&#x27; 开头的文件。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;js/**/test*&quot;</span>  <br>  <span class="hljs-comment"># 不要用 exclude 来忽略 &#x27;source/_posts/&#x27; 中的文件。  </span><br>  <span class="hljs-comment"># 你应该使用 &#x27;skip_render&#x27;。 或者在要忽略的文件的文件名之前加一个下划线 &#x27;_&#x27;。  </span><br>  <span class="hljs-comment"># - &quot;_posts/hello-world.md&quot; # 在这里配置是没有用的。  </span><br>  <br><span class="hljs-attr">ignore:</span>  <br>  <span class="hljs-comment"># 忽略任何一个名叫 &#x27;foo&#x27; 的文件夹。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;**/foo&quot;</span>  <br>  <span class="hljs-comment"># 只忽略 &#x27;themes/&#x27; 下的 &#x27;foo&#x27; 文件夹。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;**/themes/*/foo&quot;</span>  <br>  <span class="hljs-comment"># 对 &#x27;themes/&#x27; 目录下的每个文件夹中忽略名叫 &#x27;foo&#x27; 的子文件夹。  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;**/themes/**/foo&quot;</span><br></code></pre></td></tr></table></figure><p>列表中的每一项都必须用单引号或双引号包裹起来。</p><p><code>include</code> 和 <code>exclude</code> 并不适用于 <code>themes/</code> 目录下的文件。 如果需要忽略 <code>themes/</code> 目录下的部分文件或文件夹，可以使用 <code>ignore</code> 或在文件名之前添加下划线 <code>_</code>。</p><p><code>source/_posts</code> 文件夹是一个例外，但该文件夹下任何名称以 <code>_</code> 开头的文件或文件夹仍会被忽略。不建议在该文件夹中使用 <code>include</code> 规则。</p><h2 id="配置模板以适用于-front-matter"><a class="markdownIt-Anchor" href="#配置模板以适用于-front-matter"></a> 配置模板以适用于 Front Matter</h2><p>Hexo 在进行渲染时会自动对文章的 Front Matter 进行解析以实现各种功能</p><blockquote><p><a href="https://hexo.io/zh-cn/docs/front-matter">https://hexo.io/zh-cn/docs/front-matter</a></p></blockquote><p>在 Obsidian 中下载插件 Templater ，并自定义一个 Template 文件用于控制 Hexo 的渲染<br />我的文件是这么写的：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">---<br><br>title: &lt;% tp.file.title %&gt;<br><br>date: &lt;% tp.file.creation_date() %&gt;<br><br>updated: &lt;% tp.file.last_modified_date() %&gt;<br><br>tags:<br><br>categories:<br><br>description:<br><br>from:<br><br>aliases:<br><br>published: false<br><br>comments: false<br><br>---<br></code></pre></td></tr></table></figure><blockquote><p>这里也可以给 Obisdian 仓库设置一个 workflow 每次自动拉取隔壁仓库互相 push，考虑到 Git 插件会自动 Push，这里就没有设置，而是采取定期手动的模式</p></blockquote><h2 id="渲染引擎"><a class="markdownIt-Anchor" href="#渲染引擎"></a> 渲染引擎</h2><p>为了支持更多的语法和数学公式，需要对渲染引擎进行替换：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm un hexo-renderer-marked --save<br>npm i hexo-renderer-markdown-it-plus --save<br></code></pre></td></tr></table></figure><h2 id="obsidian双链语法支持"><a class="markdownIt-Anchor" href="#obsidian双链语法支持"></a> Obsidian双链语法支持</h2><p><a href="https://github.com/uuanqin/hexo-filter-titlebased-link">插件地址</a></p><h2 id="配置图床"><a class="markdownIt-Anchor" href="#配置图床"></a> 配置图床</h2><p>根据<a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/#%E7%89%B9%E6%80%A7">文档</a> 我们使用指令下载 CLI</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install picgo -g<br><br>picgo <span class="hljs-built_in">set</span> uploader<br></code></pre></td></tr></table></figure><p>在 git 创建一个公有仓库，并像前面一样，设置密钥，按照提示填入<br />这里要注意不要填入域名，否则生成的图片会指向域名</p><h3 id="obisidian-自动上传"><a class="markdownIt-Anchor" href="#obisidian-自动上传"></a> Obisidian 自动上传</h3><p>下载插件 Image Auto Upload，选择 picgo-core 模式即可</p><h2 id="外链禁止跳转"><a class="markdownIt-Anchor" href="#外链禁止跳转"></a> 外链禁止跳转</h2><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install hexo-external-link --save<br></code></pre></td></tr></table></figure><p>在 <code>_config.yml </code> 中启用即可</p><h2 id="添加搜索"><a class="markdownIt-Anchor" href="#添加搜索"></a> 添加搜索</h2><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install hexo-generator-search --save<br></code></pre></td></tr></table></figure><p>然后在 <code>_config.yml</code> 中设置</p><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">search:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">search.xml</span><br>  <span class="hljs-attr">content:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">field:</span> <span class="hljs-string">post</span><br></code></pre></td></tr></table></figure><p>并在 <code>_config.butterfly.yml</code> 中设置</p><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">search:</span><br>  <span class="hljs-attr">use:</span> <span class="hljs-string">local_search</span><br>  <span class="hljs-attr">placeholder:</span> <span class="hljs-string">搜索</span><br>  <span class="hljs-comment"># Local Search</span><br>  <span class="hljs-attr">local_search:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># Preload the search data when the page loads.</span><br>    <span class="hljs-attr">preload:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># Show top n results per article, show all results by setting to -1</span><br>    <span class="hljs-attr">top_n_per_article:</span> <span class="hljs-number">1</span><br>    <span class="hljs-comment"># Unescape html strings to the readable one.</span><br>    <span class="hljs-attr">unescape:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">CDN:</span><br></code></pre></td></tr></table></figure><h1 id="to-be-continued"><a class="markdownIt-Anchor" href="#to-be-continued"></a> To Be Continued</h1>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验 </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渲染测试</title>
      <link href="/posts/3c4a82e6/"/>
      <url>/posts/3c4a82e6/</url>
      
        <content type="html"><![CDATA[<p>【提示：Github 中 Front-matter 以表格形式显示】</p><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><h2 id="文章使用方法"><a class="markdownIt-Anchor" href="#文章使用方法"></a> 文章使用方法</h2><p>这原本是一篇 Typora 下使用 Markdown 语法的案例实践分享，最早创建于 2021 年 11 月之前，于 2023 年 6 月大改。本篇文章使用 Markdown 标记语法编写而成，汇聚了常用 Markdown 语法标注。对于不同目标人群有不同的作用：</p><ul><li>对于 Markdown 学习者。可以获取文章源码（Github 仓库地址在下面），并使用你的本地编辑器打开。通过对比标记语言与渲染结果直接学习。如果你不喜欢这种 MarkDown 学习方式，你可以参考 GitHub 学习相关 Markdown 规范：<a href="https://docs.github.com/zh/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax">基本撰写和格式语法 - GitHub 文档</a></li><li>对于其他人。这篇文章包含不同标准 Markdown 语法，你可以在任何 Markdown 编辑器打开以测试其渲染效果。<ul><li>比如说——你。你使用什么方式看到这篇文章，就了解到你所用的软件对 Markdown 语言的支持情况。如果你通过我的博客打开，那么你看到的就是 Hexo 渲染后的结果（至少目前时是这样）。</li><li>比如说——我，笔记重度依赖。我需要对比本地编辑器的渲染器与 Hexo 各类渲染器和插件对 Markdown 的支持程度，以培养合适的写作习惯，加强核心工作流的可移植性。</li></ul></li></ul><p>文章目前可预览的在线版本：</p><ul><li>Hexo 渲染网页：<a href="https://uuanqin.top/p/3c4a82e6/">Markdown渲染测试 | 半方池水半方田 (uuanqin.top)</a>。源文件直接通过 Hexo 渲染生成的静态网页。</li><li>Github 仓库： <a href="https://github.com/uuanqin/Markdown-Grammar-Rendering-Test">https://github.com/uuanqin/Markdown-Grammar-Rendering-Test</a> 。源文件的副本，不定期与 Hexo 本地同步。</li></ul><h2 id="markdown-标准"><a class="markdownIt-Anchor" href="#markdown-标准"></a> Markdown 标准</h2><p>约翰·格鲁伯在 2004 年创造了 Markdown 语言，<a href="https://daringfireball.net/projects/markdown/">Daring Fireball: Markdown</a>。格鲁伯认为不应完全标准化：「不同的网站（和人们）有不同的需求。没有一种语法可以让所有人满意。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>」</p><p>下文将从 Commonmark、GFM 为基础分板块进行 Markdown 渲染测试。</p><p>此外，对一些 Markdown 编辑器语法进行展示。其中，本文使用的 Typora 版本为 1.8.10，Obsidian 版本为 1.6.7。</p><h1 id="基础commonmark"><a class="markdownIt-Anchor" href="#基础commonmark"></a> 基础（CommonMark）</h1><p>这一部分测试 Markdown 基础语法，参考自 <a href="https://commonmark.org/">CommonMark</a>。这部分内容的成功渲染（除了下面的段落部分）是本文结构不至于散乱的基础（比如上文的标题、超链接、列表等的正确渲染）。</p><p>（第一段）这是一个很长很长很长很长的段落。</p><p>只有隔一个空行才能分锻，有点像 Latex。</p><p>在 CommonMark 语法中这三句话是一长句的。</p><p>【提示】在 Typora、Obsidian 中是换行了，这样做是有好处的。</p><p>（第二段）这是一个很长很长很长很长的段落。</p><p>与上一段之间隔了一个空行。</p><p>（第三段）这是一个很长很长很长很长的段落。\</p><p>反斜杠也能起到换行的作用。\</p><p>【提示】Typora、Obsidian 不需要这个符号，这样做会很方便。</p><h1 id="一级标题类-atx-形式"><a class="markdownIt-Anchor" href="#一级标题类-atx-形式"></a> 一级标题（类 Atx 形式）</h1><h2 id="二级标题类-atx-形式"><a class="markdownIt-Anchor" href="#二级标题类-atx-形式"></a> 二级标题（类 Atx 形式）</h2><h3 id="三级标题类-atx-形式"><a class="markdownIt-Anchor" href="#三级标题类-atx-形式"></a> 三级标题（类 Atx 形式）</h3><h1 id="一级标题类-setext-形式"><a class="markdownIt-Anchor" href="#一级标题类-setext-形式"></a> 一级标题（类 Setext 形式）</h1><h2 id="二级标题类-setext-形式"><a class="markdownIt-Anchor" href="#二级标题类-setext-形式"></a> 二级标题（类 Setext 形式）</h2><p>【提示】Obsidian 支持类 Setext 形式的标题，请在浏览模式下查看。</p><p><em>斜体（星号表示）</em>  <em>斜体（下划线表示）</em></p><p><strong>粗体（星号表示）</strong> <strong>粗体（下划线表示）</strong></p><blockquote><p>引言</p><blockquote><p>二级引言</p></blockquote><p>引言</p></blockquote><ul><li>无序列表 使用横线</li></ul><ul><li>无序列表 使用星号</li></ul><ol><li>有序列表 使用数字加点</li></ol><ol start="2"><li>有序列表 使用数字加右括号</li></ol><p>【提示】Obsidian 中有序列表有区别。</p><ul><li><p>网状列表</p><ol><li>元素 1</li><li>元素 2</li></ol></li><li><p>网状列表</p><ul><li>使用横线</li></ul><ul><li>使用星号</li></ul></li></ul><p><a href="http://b.org">链接（方括号后加圆括号）</a></p><p><a href="http://b.org">带参考的链接 1</a> 链接外文字 <a href="http://b.org">带参考链接 2</a> 链接外文字</p><p>链接悬停提示写法：<a href="https://a.com" title="hint">Title</a></p><p><img src="https://commonmark.org/help/images/favicon.png" alt="图片链接" /></p><p><img src="https://commonmark.org/help/images/favicon.png" alt="图片链接带脚注" title=" 图片标题 " /></p><p>【提示】Obsidian 在浏览模式下正常，在编辑模式有点迷惑，这是由它们的链接特色决定的。</p><p>行内代码 <code>Inline Code</code> 行内代码（单个反引号包裹）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># 代码块（三个反引号包裹）<br></code></pre></td></tr></table></figure><pre><code>代码块（四个空格开头）代码块（紧挨上一行）</code></pre><p>【提示】Obsidian 这里的代码块在浏览模式下没有区别</p><p>减号式下划线：</p><hr /><p>星号式下划线：</p><hr /><h1 id="github-flavored-markdowngfm"><a class="markdownIt-Anchor" href="#github-flavored-markdowngfm"></a> GitHub Flavored Markdown（GFM）</h1><p>GitHub Flavored Markdown, often shortened as GFM, is the dialect of Markdown that is currently supported for user content on <a href="http://GitHub.com">GitHub.com</a> and GitHub Enterprise.</p><h2 id="基本格式语法"><a class="markdownIt-Anchor" href="#基本格式语法"></a> 基本格式语法</h2><p>这里只介绍 <a href="https://docs.github.com/zh/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax">基本撰写和格式语法 - GitHub 文档</a> 提及的规范。</p><p>与 CommonMark 对比新增了以下语法：</p><h4 id="支持四级标题类-atx-形式井号方式"><a class="markdownIt-Anchor" href="#支持四级标题类-atx-形式井号方式"></a> 支持四级标题（类 Atx 形式，井号方式）</h4><h5 id="支持五级标题类-atx-形式井号方式"><a class="markdownIt-Anchor" href="#支持五级标题类-atx-形式井号方式"></a> 支持五级标题（类 Atx 形式，井号方式）</h5><h6 id="支持六级标题类-atx-形式井号方式"><a class="markdownIt-Anchor" href="#支持六级标题类-atx-形式井号方式"></a> 支持六级标题（类 Atx 形式，井号方式）</h6><p><s>删除线（两条波浪线）</s></p><p><strong>粗体和嵌入 _ 斜体 _</strong>   两个星号内下划线括住。【提示】Obsidian 支持内嵌斜体，请在浏览模式打开。</p><p><em><strong>全部粗体和斜体（三个星号）</strong></em></p><p>使用<sub>下标</sub></p><p>使用<sup>上标</sup></p><ul><li>加号创建的无序列表</li></ul><p>任务列表展示：</p><ul><li>[x] 任务列表</li><li>[ ] 任务列表</li></ul><p>表情符号（使用冒号括住） 👍   😄【提示】Obsidian 不支持，但是可以直接输入😯</p><p>脚注。使用此括号 <sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> 语法为您的内容 <sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> 添加脚注。</p><p>【提示】Obsidian 会把脚注自动放到页面后。</p><p>支持转义符（反引号）忽略 Markdown 格式。</p><p>以下符号可以转义（<a href="https://daringfireball.net/projects/markdown/syntax">Daring Fireball: Markdown Syntax Documentation</a>）</p><p>\   backslash</p><p>`   backtick</p><p>*   asterisk</p><p>_   underscore</p><p>{}  curly braces</p><p>[]  square brackets</p><p>()  parentheses</p><p>支持 Markdown 的隐藏渲染：</p><!-- This content will not appear in the rendered Markdown --><p>【提示】Typora 处理仅仅是标黄，Obsidian 支持。</p><h2 id="高级格式"><a class="markdownIt-Anchor" href="#高级格式"></a> 高级格式</h2><p>如果你正在使用 Typora 预览，建议打开偏好设置调整以支持更多语法。</p><h3 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> 表格</h3><p>表格末尾的竖线可选。单元格的宽度可以不同，无需在列内准确对齐。 标题行的第一列中必须至少有三个横线。可借助 <a href="https://www.tablesgenerator.com/markdown_tables">在线表格生成工具</a> 生成表格。</p><p>可以在表格中使用格式，例如链接、内联代码块和文本样式。</p><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content <strong>Cell</strong></td></tr><tr><td><a href="https://docs.github.com/zh/get-started/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables">Content Cell</a></td><td><em>Content</em> Cell</td></tr><tr><td><code>Content Cell</code></td><td><em><strong>Content</strong></em> Cell</td></tr></tbody></table><p>可以通过在标题行中连字符的左侧、右侧或两侧添加冒号 <code> :</code>，来靠左、靠右或居中对齐列中的文本。</p><p>若要包含竖线 <code>|</code> 作为单元格中的内容，请在竖线前使用 <code> \</code></p><table><thead><tr><th style="text-align:left">Left-aligned</th><th style="text-align:center">Center-aligned</th><th style="text-align:right">Right-aligned</th></tr></thead><tbody><tr><td style="text-align:left">git status</td><td style="text-align:center">git status</td><td style="text-align:right">git status</td></tr><tr><td style="text-align:left">git diff</td><td style="text-align:center">`</td><td style="text-align:right">git diff |</td></tr></tbody></table><h3 id="折叠部分"><a class="markdownIt-Anchor" href="#折叠部分"></a> 折叠部分</h3><details><summary>CLICK ME</summary><p><h4 id="we-can-hide-anything-even-code"><a class="markdownIt-Anchor" href="#we-can-hide-anything-even-code"></a> We can hide anything, even code!</h4><figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">puts <span class="hljs-string">&quot;Hello World&quot;</span><br></code></pre></td></tr></table></figure></p></details><p>【提示】Typora ，Obsidian 不支持。</p><h3 id="代码块"><a class="markdownIt-Anchor" href="#代码块"></a> 代码块</h3><p>要在围栏代码块中显示三重倒引号，请将其包在四个倒引号内。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">```<br>Look! You can see my backticks.<br>```<br></code></pre></td></tr></table></figure><p>支持语法高亮（使用 <a href="https://github.com/github-linguist/linguist">github-linguist/linguist: Language Savant. </a>）</p><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello World!&quot;</span>)<br></code></pre></td></tr></table></figure><p>使用代码块在 Markdown 中创建关系图。 GitHub 支持 Mermaid、GeoJSON、TopoJSON 和 ASCII STL 语法。</p><p>Mermaid 是一款受 Markdown 启发的工具，可将文本呈现为关系图。 例如，Mermaid 可以呈现流程图、序列图、饼图等。 有关详细信息，请参阅 <a href="https://mermaid-js.github.io/mermaid/#/">Mermaid 文档</a>。如果你的 Markdown 渲染器支持渲染的话，你应该看到下面流程图。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mermaid">graph TD;<br>    A--&gt;B;<br>    A--&gt;C;<br>    B--&gt;D;<br>    C--&gt;D;<br></code></pre></td></tr></table></figure><p>可使用 GeoJSON 或 TopoJSON 语法创建交互式地图。 若要创建地图，请使用 <code>geojson</code> 或 <code>topojson</code> 语法标识符在围栏代码块中添加 GeoJSON 或 TopoJSON。如果你的 Markdown 渲染器支持渲染的话，你应该看到下面两幅图。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs geojson">&#123;<br>  &quot;type&quot;: &quot;FeatureCollection&quot;,<br>  &quot;features&quot;: [<br>    &#123;<br>      &quot;type&quot;: &quot;Feature&quot;,<br>      &quot;id&quot;: 1,<br>      &quot;properties&quot;: &#123;<br>        &quot;ID&quot;: 0<br>      &#125;,<br>      &quot;geometry&quot;: &#123;<br>        &quot;type&quot;: &quot;Polygon&quot;,<br>        &quot;coordinates&quot;: [<br>          [<br>              [-90,35],<br>              [-90,30],<br>              [-85,30],<br>              [-85,35],<br>              [-90,35]<br>          ]<br>        ]<br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs topojson">&#123;<br>  &quot;type&quot;: &quot;Topology&quot;,<br>  &quot;transform&quot;: &#123;<br>    &quot;scale&quot;: [0.0005000500050005, 0.00010001000100010001],<br>    &quot;translate&quot;: [100, 0]<br>  &#125;,<br>  &quot;objects&quot;: &#123;<br>    &quot;example&quot;: &#123;<br>      &quot;type&quot;: &quot;GeometryCollection&quot;,<br>      &quot;geometries&quot;: [<br>        &#123;<br>          &quot;type&quot;: &quot;Point&quot;,<br>          &quot;properties&quot;: &#123;&quot;prop0&quot;: &quot;value0&quot;&#125;,<br>          &quot;coordinates&quot;: [4000, 5000]<br>        &#125;,<br>        &#123;<br>          &quot;type&quot;: &quot;LineString&quot;,<br>          &quot;properties&quot;: &#123;&quot;prop0&quot;: &quot;value0&quot;, &quot;prop1&quot;: 0&#125;,<br>          &quot;arcs&quot;: [0]<br>        &#125;,<br>        &#123;<br>          &quot;type&quot;: &quot;Polygon&quot;,<br>          &quot;properties&quot;: &#123;&quot;prop0&quot;: &quot;value0&quot;,<br>            &quot;prop1&quot;: &#123;&quot;this&quot;: &quot;that&quot;&#125;<br>          &#125;,<br>          &quot;arcs&quot;: [[1]]<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;,<br>  &quot;arcs&quot;: [[[4000, 0], [1999, 9999], [2000, -9999], [2000, 9999]],[[0, 0], [0, 9999], [2000, 0], [0, -9999], [-2000, 0]]]<br>&#125;<br></code></pre></td></tr></table></figure><p>GFM 可以直接在 Markdown 中使用 ASCII STL 语法来创建交互式 3D 模型。 若要显示模型，请使用 <code>stl</code> 语法标识符在围栏代码块中添加 ASCII STL 语法。如果你的 Markdown 渲染器支持渲染的话，应该看到一个立方体而不是代码块。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs stl">solid cube_corner<br>  facet normal 0.0 -1.0 0.0<br>    outer loop<br>      vertex 0.0 0.0 0.0<br>      vertex 1.0 0.0 0.0<br>      vertex 0.0 0.0 1.0<br>    endloop<br>  endfacet<br>  facet normal 0.0 0.0 -1.0<br>    outer loop<br>      vertex 0.0 0.0 0.0<br>      vertex 0.0 1.0 0.0<br>      vertex 1.0 0.0 0.0<br>    endloop<br>  endfacet<br>  facet normal -1.0 0.0 0.0<br>    outer loop<br>      vertex 0.0 0.0 0.0<br>      vertex 0.0 0.0 1.0<br>      vertex 0.0 1.0 0.0<br>    endloop<br>  endfacet<br>  facet normal 0.577 0.577 0.577<br>    outer loop<br>      vertex 1.0 0.0 0.0<br>      vertex 0.0 1.0 0.0<br>      vertex 0.0 0.0 1.0<br>    endloop<br>  endfacet<br>endsolid<br></code></pre></td></tr></table></figure><p>【提示】Typora、Obsidian 不支持 <code>geojson</code> 、 <code>topojson</code> 或 <code>ASCII STL</code> 语法。</p><h3 id="数学表达式"><a class="markdownIt-Anchor" href="#数学表达式"></a> 数学表达式</h3><p>内联表达式：This sentence uses <code>$</code> delimiters to show math inline:  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mrow><mn>3</mn><mi>x</mi><mo>−</mo><mn>1</mn></mrow></msqrt><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sqrt{3x-1}+(1+x)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.17444499999999996em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8655550000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-2.825555em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17444499999999996em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>要以块的形式添加数学表达式，请启动一个新行，并使用两个美元符号 <code>$$</code> 分隔表达式。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mi>k</mi></msub><msub><mi>b</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>≤</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>a</mi><mi>k</mi><mn>2</mn></msubsup><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>b</mi><mi>k</mi><mn>2</mn></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.2561210000000003em;vertical-align:-1.302113em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.954008em;"><span style="top:-4.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0521130000000003em;vertical-align:-1.302113em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span></span></p><p>或者，可以使用 <code>math</code> 代码块语法将数学表达式显示为块。 使用此语法时，无需使用 <code>$$</code> 分隔符。【提示】Typora、Obsidian 不支持。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs math">\sqrt&#123;3&#125;<br></code></pre></td></tr></table></figure><p>表示美元符号：</p><ul><li>在数学表达式内，在显式 <code>$</code> 之前添加一个 <code>\</code> 符号。<ul><li>This expression uses <code>\$</code> to display a dollar sign: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mrow><mi mathvariant="normal">$</mi><mn>4</mn></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{\$4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.10777999999999999em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.93222em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">$</span><span class="mord">4</span></span></span><span style="top:-2.89222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10777999999999999em;"><span></span></span></span></span></span></span></span></span></li></ul></li><li>在数学表达式之外，但在同一行上，在显式 <code>$</code> 两边使用 span 标记。<ul><li>To split <span>$</span>100 in half, we calculate <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>​</mtext><mn>100</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">​100/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">​</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">/</span><span class="mord">2</span></span></span></span></li><li>【提示】Typora 不支持。</li></ul></li></ul><p>如果你还想学习更多，请看 <a href="https://github.github.com/gfm/">GitHub Flavored Markdown Spec</a></p><p>在网页上以文本的形式展示数学公式，只需要一个 LaTeX 的子集能渲染数学公式即可。KaTeX 就是这样一个支持 HTML 的轻量级的数学公式引擎。因此，在网页中编写数学公式应注意使用兼容性更广的语法。</p><h1 id="typora"><a class="markdownIt-Anchor" href="#typora"></a> Typora</h1><p><strong>Typora</strong> 使用 GFM，其特色在于“WYSIWYG”，其有自己特色的语法渲染。</p><p>使用类 Setext 形式 (<a href="https://en.wikipedia.org/wiki/Setext">Setext - Wikipedia</a>) 创建标题。注意使用 Shift+Enter 换行。（有线）</p><p>使用类 Atx 形式创建标题，一共可以有 6 个级别。（井号）</p><p>使用 <code>[TOC]</code> 创建目录：</p><p>[TOC]</p><p>分割线使用三个以上符号（最后一个使用了标签）。符号中间可以插入空格。</p><hr /><hr /><hr /><hr /><hr /><hr /><hr /><p><kbd>Esc</kbd></p><p>段落的换行是使用两个以上的空格加回车（在 Typora 编辑器里是<kbd>Shift</kbd>+<kbd>Enter</kbd>）</p><p>或者使用 HTML 标签<br>进行换行</p><p>不要吝惜回车，在一些情况下回车会被吞掉！</p><p>代码块内还能高亮：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs gfm">Here&#x27;s an example:<br><br>```js<br>function test() &#123;<br>  console.log(&quot;notice the blank line before this function?&quot;);<br>&#125;<br>```<br><br>syntax highlighting:<br>```ruby<br>require &#x27;redcarpet&#x27;<br>markdown = Redcarpet.new(&quot;Hello World!&quot;)<br>puts markdown.to_html<br>```<br></code></pre></td></tr></table></figure><p>Typora now supports <a href="http://jekyllrb.com/docs/frontmatter/">YAML Front Matter</a>. Input <code>---</code> at the top of the article and then press <code>Return</code> to introduce a metadata block. Alternatively, you can insert a metadata block from the top menu of Typora. 这里就不演示了哈，弄 Hexo 的喜闻乐见。</p><p>支持有标题的 Link，试试鼠标停留在上面：<a href="http://example.com/" title="Title">an example</a></p><p>Typora allows you to insert URLs as links, wrapped by <code>&lt;</code>brackets<code>&gt;</code>.</p><p><code>&lt;i@typora.io&gt;</code> becomes <a href="mailto:i@typora.io">i@typora.io</a>.</p><p>Typora will also automatically link standard URLs. e.g: <a href="http://www.google.com">www.google.com</a>. 就是没有任何标记也解析出地址了。</p><p>Underline is powered by raw HTML.</p><p>支持下划线：<code>&lt;u&gt;下划线&lt;/u&gt;</code> becomes <u>下划线</u>.</p><p>支持上下标（在偏好设置中设置）：H<sub>2</sub>O  X<sup>2</sup></p><p>支持高亮：<mark>highlight</mark></p><h1 id="obsidian-flavored-markdownofm"><a class="markdownIt-Anchor" href="#obsidian-flavored-markdownofm"></a> Obsidian Flavored Markdown（OFM）</h1><p>Obsidian 是一个基于 Markdown 进行记录的知识库软件，特点在于支持笔记的双向链接。因此，有自己的独特语法。</p><p>Obsidian 努力让 Obsidian 的语法不偏离正统的 Markdown 语法太多。总的来看，Obsidian 的语法大多还是基于 CommonMark，包括了一些 GitHub Flavored Markdown（GFM）和 LaTeX，以及 Obsidian<strong>特有的</strong>语法。</p><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td><strong>[[ ]]</strong></td><td><a href="https://help.obsidian.md/Linking+notes+and+files/Internal+links">Internal links</a></td></tr><tr><td><strong>![[ ]]</strong></td><td><a href="https://help.obsidian.md/Linking+notes+and+files/Embedding+files">Embedding files</a></td></tr><tr><td><code>%%</code></td><td><a href="https://help.obsidian.md/Editing+and+formatting/Basic+formatting+syntax#Comments">Comments</a></td></tr><tr><td><code>&gt; [!note]</code></td><td><a href="https://help.obsidian.md/Editing+and+formatting/Callouts">Callouts</a></td></tr></tbody></table><p>提示：为防止其他插件影响，Embedding files 的示例含转义字符。</p><p>Obsidian doesn’t support Markdown syntax or blank lines within HTML blocks.</p><p>参考：</p><ul><li><a href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BD%A0%E7%9A%84%E7%AC%94%E8%AE%B0">格式化你的笔记 - Obsidian 中文帮助 - Obsidian Publish</a></li><li><a href="https://help.obsidian.md/Editing+and+formatting/Obsidian+Flavored+Markdown">Obsidian Flavored Markdown - Obsidian Help</a></li></ul><h2 id="internal-links-内部链接"><a class="markdownIt-Anchor" href="#internal-links-内部链接"></a> Internal links 内部链接</h2><p>通过 <strong>[[ ]]</strong> 来链接库中任意一个文件。</p><p>链接一篇笔记：例如 [[双链渲染测试]]。</p><p>你可以将图片或者音频等附件嵌入到你的笔记中。嵌入文件的语法为 <strong>![[文件名.png]]</strong></p><p>你可以通过相同的语法将 PDF 文件嵌入到你的笔记中。除此之外，你可以通过 <strong>![[My File.pdf#page=number]]</strong> 这样的形式直接指定嵌入 PDF 文件的页码。</p><p>由于 Markdown 兼容 HTML，因此你可以使用“iframe”将网页嵌入到笔记中。</p><blockquote><p>这个语法实际受到了 Markdown 相关语法的启发：</p><ol><li>在 Markdown 中，[Image](link.png) 可以让链接指向图片，而 ![Image](link.png) 能让图片嵌入到当前文档中。</li><li>而 <a href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5">内部链接</a> 的语法则基于以下设定：[[My page]] 是 [My page](My page) 的一个便捷写法（或者是“语法糖”）。</li></ol><p>综上，我们可以得到 ![[My page]] 应该等效于 ![My page](My page)。</p><p>当然，我们也可以使用其他形式的语法。比如，Roam Research 的嵌入语法为 <code>&#123;&#123;embed: ((NODE_ID))&#125;&#125;</code>。我们曾经想过使用 <code>((Page name))</code> 这样的形式来表示嵌入，但后来我们认为还是 <strong>![[Page Name]]</strong> 的形式能更好地与其他语法保持一致，便于记忆，同时也能减少符号的占用，让其他符号能够表示其他含义。</p></blockquote><p>你可以通过以下语法调整嵌入到笔记中的图片的大小：</p><p>Markdown 风格的嵌入，使用 <strong>![AltText|100x100](<a href="https://url/to/image.png%5C">https://url/to/image.png\</a>)</strong> 这样的语法。</p><p>一般的嵌入，使用 <strong>![[image.png|100x100]]</strong> 这样的语法。</p><p>如果要根据图像的宽高比例进行缩放，请省略高度，如 <strong>![[image.png|100]]</strong>。</p><p><a href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI">Obsidian URI</a> 可以让你在其他应用或 Obsidian 的其他库中打开当前库的某篇笔记。</p><p>比如，你可以通过以下方式跳转到某个库中的某篇笔记（请注意 <a href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI#%E7%BC%96%E7%A0%81">URI 的编码</a>）：</p><figure class="highlight md"><table><tr><td class="code"><pre><code class="hljs md">[<span class="hljs-string">打开某篇笔记</span>](<span class="hljs-link">obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md</span>)<br></code></pre></td></tr></table></figure><p>如果 url 中含有空格的话，空格需要转义为 <code>%20</code>，如：</p><figure class="highlight md"><table><tr><td class="code"><pre><code class="hljs md">[<span class="hljs-string">Export options</span>](<span class="hljs-link">Pasted%20image</span>)<br></code></pre></td></tr></table></figure><p>示例：<a href="Pasted%20image">Export options</a></p><p>当然，你也可以用 <code>&lt;&gt;</code> 将空格包含起来，如：</p><figure class="highlight md"><table><tr><td class="code"><pre><code class="hljs md">[<span class="hljs-string">Slides Demo</span>](<span class="hljs-link">&lt;Slides Demo&gt;</span>)<br></code></pre></td></tr></table></figure><p>示例：<a href="Slides%20Demo">Slides Demo</a></p><h2 id="comments-注释"><a class="markdownIt-Anchor" href="#comments-注释"></a> Comments 注释</h2><p>所谓注释，指的是会在编辑模式中显示，但不会在预览模式中显示的内容。使用 <code>%%</code> 可以将内容变为注释。以下为语法：</p><figure class="highlight md"><table><tr><td class="code"><pre><code class="hljs md">这里是行内注释：%%预览模式下你将看不到这句话%%<br><br>这里是跨行注释：<br>%%<br>所谓跨行<br>就是可以有很多行<br>%%<br></code></pre></td></tr></table></figure><p>以下为示例：</p><p>这里是行内注释：%% 预览模式下你将看不到这句话%%</p><p>这里是跨行注释：</p><p>%%<br />所谓跨行<br />就是可以有很多行<br />%%</p><h2 id="标注-callouts"><a class="markdownIt-Anchor" href="#标注-callouts"></a> 标注 Callouts</h2><p>参考：<a href="https://help.obsidian.md/Editing+and+formatting/Callouts">Callouts</a></p><blockquote><p>GFM 也存在类似的语法：<a href="https://docs.github.com/en/contributing/style-guide-and-content-model/style-guide">Style guide - GitHub Docs</a><br />Microsoft 也有类似的语法，详看后文。</p></blockquote><p>支持以下类型：</p><ul><li>note</li><li>abstract, summary, tldr</li><li>info</li><li>todo</li><li>tip, hint, important</li><li>success, check, done</li><li>question, help, faq</li><li>warning, caution, attention</li><li>failure, fail, missing</li><li>danger, error</li><li>bug</li><li>example</li><li>quote, cite</li></ul><div class="callout" data-callout="any"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pencil"><path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"/><path d="m15 5 4 4"/></svg></div><div class="callout-title-inner">Any</div></div><div class="callout-content"><p>当类型不在列表中时。</p></div></div><div class="callout" data-callout="note"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pencil"><path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"/><path d="m15 5 4 4"/></svg></div><div class="callout-title-inner">Note</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="abstract"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard-list"><rect width="8" height="4" x="8" y="2" rx="1" ry="1"/><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/><path d="M12 11h4"/><path d="M12 16h4"/><path d="M8 11h.01"/><path d="M8 16h.01"/></svg></div><div class="callout-title-inner">Abstract</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="summary"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard-list"><rect width="8" height="4" x="8" y="2" rx="1" ry="1"/><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/><path d="M12 11h4"/><path d="M12 16h4"/><path d="M8 11h.01"/><path d="M8 16h.01"/></svg></div><div class="callout-title-inner">Summary</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="tldr"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard-list"><rect width="8" height="4" x="8" y="2" rx="1" ry="1"/><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/><path d="M12 11h4"/><path d="M12 16h4"/><path d="M8 11h.01"/><path d="M8 16h.01"/></svg></div><div class="callout-title-inner">Tldr</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="info"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-info"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4"/><path d="M12 8h.01"/></svg></div><div class="callout-title-inner">Info</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="todo"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check-circle-2"><circle cx="12" cy="12" r="10"/><path d="m9 12 2 2 4-4"/></svg></div><div class="callout-title-inner">Todo</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="tip"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/></svg></div><div class="callout-title-inner">Tip</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="hint"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/></svg></div><div class="callout-title-inner">Hint</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="important"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/></svg></div><div class="callout-title-inner">Important</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="success"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check"><path d="M20 6 9 17l-5-5"/></svg></div><div class="callout-title-inner">Success</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="check"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check"><path d="M20 6 9 17l-5-5"/></svg></div><div class="callout-title-inner">Check</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="done"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check"><path d="M20 6 9 17l-5-5"/></svg></div><div class="callout-title-inner">Done</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="question"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-help-circle"><circle cx="12" cy="12" r="10"/><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Question</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="help"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-help-circle"><circle cx="12" cy="12" r="10"/><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Help</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="faq"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-help-circle"><circle cx="12" cy="12" r="10"/><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Faq</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="warning"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-alert-triangle"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"/><path d="M12 9v4"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Warning</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="caution"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-alert-triangle"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"/><path d="M12 9v4"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Caution</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="attention"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-alert-triangle"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"/><path d="M12 9v4"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Attention</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="failure"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg></div><div class="callout-title-inner">Failure</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="fail"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg></div><div class="callout-title-inner">Fail</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="missing"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg></div><div class="callout-title-inner">Missing</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="danger"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-zap"><polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"/></svg></div><div class="callout-title-inner">Danger</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="error"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-zap"><polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"/></svg></div><div class="callout-title-inner">Error</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="bug"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-bug"><path d="m8 2 1.88 1.88"/><path d="M14.12 3.88 16 2"/><path d="M9 7.13v-1a3.003 3.003 0 1 1 6 0v1"/><path d="M12 20c-3.3 0-6-2.7-6-6v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v3c0 3.3-2.7 6-6 6"/><path d="M12 20v-9"/><path d="M6.53 9C4.6 8.8 3 7.1 3 5"/><path d="M6 13H2"/><path d="M3 21c0-2.1 1.7-3.9 3.8-4"/><path d="M20.97 5c0 2.1-1.6 3.8-3.5 4"/><path d="M22 13h-4"/><path d="M17.2 17c2.1.1 3.8 1.9 3.8 4"/></svg></div><div class="callout-title-inner">Bug</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="example"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-list"><line x1="8" x2="21" y1="6" y2="6"/><line x1="8" x2="21" y1="12" y2="12"/><line x1="8" x2="21" y1="18" y2="18"/><line x1="3" x2="3.01" y1="6" y2="6"/><line x1="3" x2="3.01" y1="12" y2="12"/><line x1="3" x2="3.01" y1="18" y2="18"/></svg></div><div class="callout-title-inner">Example</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="quote"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-quote"><path d="M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z"/><path d="M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z"/></svg></div><div class="callout-title-inner">Quote</div></div><div class="callout-content"><p>Lorem ipsum dolor sit amet</p></div></div><div class="callout" data-callout="cite"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-quote"><path d="M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z"/><path d="M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z"/></svg></div><div class="callout-title-inner">Cite</div></div><div class="callout-content"><p></p></div></div><p>折叠：</p><details class="callout" data-callout="question" data-callout-fold="-"><summary class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-help-circle"><circle cx="12" cy="12" r="10"/><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">折叠尝试（无折叠内容）</div><div class="callout-fold"></div></summary><div class="callout-content"><p></p></div></details><details class="callout" data-callout="cite" data-callout-fold="-"><summary class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-quote"><path d="M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z"/><path d="M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z"/></svg></div><div class="callout-title-inner">折叠尝试（默认关）</div><div class="callout-fold"></div></summary><div class="callout-content"><p>折叠内容</p></div></details><details class="callout" data-callout="success" data-callout-fold="-"><summary class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check"><path d="M20 6 9 17l-5-5"/></svg></div><div class="callout-title-inner">折叠尝试（默认开）</div><div class="callout-fold"></div></summary><div class="callout-content"><p>折叠内容</p></div></details><p>在不打断笔记流的情况下使用标注附加内容。</p><div class="callout" data-callout="info"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-info"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4"/><path d="M12 8h.01"/></svg></div><div class="callout-title-inner">Info</div></div><div class="callout-content"><p>默认标题<br />Here’s a callout block.<br />It supports <strong>Markdown</strong>, <em>Wikilinks and embeds</em>!</p><p>无序列表：</p><ul><li>项目 1</li></ul><p>有序列表：</p><ol><li>项目 a</li></ol></div></div><div class="callout" data-callout="tip"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/></svg></div><div class="callout-title-inner">自定义标题</div></div><div class="callout-content"><p>公式渲染：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mo>+</mo><mi>v</mi><mo>−</mo><mi>e</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">r+v-e=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></span></p><p>行内代码：<code>Class&lt;?&gt; class = MyClass.class;</code></p><p>图片：<img src="https://commonmark.org/help/images/favicon.png" alt="图片链接" /></p></div></div><div class="callout" data-callout="error"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-zap"><polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"/></svg></div><div class="callout-title-inner">标题内公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup><mo>=</mo><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">a^2+b^2=c^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，标题内代码 <code>Hello world!</code></div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="cite"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-quote"><path d="M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z"/><path d="M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z"/></svg></div><div class="callout-title-inner">标题内图片：<img src="https://commonmark.org/help/images/favicon.png" alt="图片链接" />图片后文字</div></div><div class="callout-content"><p></p></div></div><div class="callout" data-callout="question"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-help-circle"><circle cx="12" cy="12" r="10"/><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Can callouts be nested?</div></div><div class="callout-content"><p></p><div class="callout" data-callout="todo"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check-circle-2"><circle cx="12" cy="12" r="10"/><path d="m9 12 2 2 4-4"/></svg></div><div class="callout-title-inner">Yes!, they can.</div></div><div class="callout-content"><p></p><details class="callout" data-callout="example" data-callout-fold="+" open><summary class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-list"><line x1="8" x2="21" y1="6" y2="6"/><line x1="8" x2="21" y1="12" y2="12"/><line x1="8" x2="21" y1="18" y2="18"/><line x1="3" x2="3.01" y1="6" y2="6"/><line x1="3" x2="3.01" y1="12" y2="12"/><line x1="3" x2="3.01" y1="18" y2="18"/></svg></div><div class="callout-title-inner">You can even use multiple layers of nesting.</div><div class="callout-fold"></div></summary><div class="callout-content"><p></p><details class="callout" data-callout="cite" data-callout-fold="-"><summary class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-quote"><path d="M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z"/><path d="M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z"/></svg></div><div class="callout-title-inner">折叠尝试</div><div class="callout-fold"></div></summary><div class="callout-content"><p>折叠内容</p></div></details></div></details></div></div></div></div><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><h3 id="图表"><a class="markdownIt-Anchor" href="#图表"></a> 图表</h3><p>Obsidian 通过 <a href="https://mermaid-js.github.io/">Mermaid</a> 及其所提供的 <a href="https://mermaid-js.github.io/mermaid-live-editor">编译器</a> 来为用户提供图表的绘制功能。</p><h1 id="microsoft-learn"><a class="markdownIt-Anchor" href="#microsoft-learn"></a> Microsoft Learn</h1><blockquote><p>参考：<a href="https://learn.microsoft.com/en-us/contribute/content/markdown-reference">Markdown reference for Microsoft Learn - Contributor guide | Microsoft Learn</a></p></blockquote><p>Microsoft Learn 还支持自定义 Markdown 扩展。</p><p>例如：警报（备注、提示、重要提示、提醒、警告）</p><div class="callout" data-callout="note"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pencil"><path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"/><path d="m15 5 4 4"/></svg></div><div class="callout-title-inner">Note</div></div><div class="callout-content"><p>Information the user should notice even if skimming.</p></div></div><div class="callout" data-callout="tip"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/></svg></div><div class="callout-title-inner">Tip</div></div><div class="callout-content"><p>Optional information to help a user be more successful.</p></div></div><div class="callout" data-callout="important"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/></svg></div><div class="callout-title-inner">Important</div></div><div class="callout-content"><p>Essential information required for user success.</p></div></div><div class="callout" data-callout="caution"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-alert-triangle"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"/><path d="M12 9v4"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Caution</div></div><div class="callout-content"><p>Negative potential consequences of an action.</p></div></div><div class="callout" data-callout="warning"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-alert-triangle"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"/><path d="M12 9v4"/><path d="M12 17h.01"/></svg></div><div class="callout-title-inner">Warning</div></div><div class="callout-content"><p>Dangerous certain consequences of an action.</p></div></div><p>其他语法详见文档：<a href="https://learn.microsoft.com/zh-cn/contribute/markdown-reference">Microsoft Learn 的 Markdown 参考 - Contributor guide | Microsoft Learn</a></p><p>【提示：与 OFM 的 Callouts 语法一致，具体详看 OFM】</p><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="html-支持情况"><a class="markdownIt-Anchor" href="#html-支持情况"></a> HTML 支持情况</h2><iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&theme-id=0&default-tab=css,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'></iframe><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&lt;video src=&quot;xxx.mp4&quot; /&gt;  # 这个放在Hexo会使后文无法显示，故此处以代码块包围<br></code></pre></td></tr></table></figure><p>可以使用普通的 <code>&lt;img&gt;</code> 标签指定图片的高度与宽度：</p><img src="https://commonmark.org/help/images/favicon.png" width="30%"><h3 id="一般标签"><a class="markdownIt-Anchor" href="#一般标签"></a> 一般标签</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>使用<kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>A</kbd>快速打开 QQ 截屏工具，这里使用了 <code>&lt;kbd&gt;</code> 标签</p><p>这是<sub>下标</sub>   这是<sup>上标</sup>    换行标签<br>换行了</p><p>标签：</p><p><em>强调的内容 (好像和斜体差不多)</em> [^斜体]   <strong>语气更强 (粗体？)</strong>[^加粗]    <code>代码 scanf()</code>    <var>变量</var>    <cite>引用</cite></p><h3 id="字体-颜色和大小"><a class="markdownIt-Anchor" href="#字体-颜色和大小"></a> 字体、颜色和大小</h3><p><b>粗体文本</b>    <i>斜体文本</i>    <big>大号字体</big>    <small>小号字体</small>    <tt>等宽文本</tt>  <u>下划线</u></p><p><font face="黑体">黑体</font>  <font face="微软雅黑">微软雅黑</font>  <font face="STCAIYUN">华文彩云</font>  <font face="华文行楷" >华文行楷</font>  <font face="时尚中黑" >时尚中黑</font>  （我猜你电脑里装有什么字体就能用什么字体）</p><p><mark>黄色高亮</mark></p><p><font color=#00ffff size=3>#00ffff</font>   <font color=gray size=3>gray 色</font>    <font color=#0099ff size=5 face="黑体">#0099ff size=5 黑体</font></p><p><a href='#color'>附录：颜色名列表</a></p><h3 id="折叠段落"><a class="markdownIt-Anchor" href="#折叠段落"></a> 折叠段落</h3><details><summary>Title</summary>content</details><h3 id="设置锚点"><a class="markdownIt-Anchor" href="#设置锚点"></a> 设置锚点</h3><p><a href='#jump'>点我跳转（Typora 下按住 Ctrl 键点击）</a></p><p><a href="#jump_two">点我跳转2</a></p><p>这里给出两种方法实现锚点</p><p><a name='jump'>跳转到这里</a></p><p><span id = "jump_two">跳转到这里 2</span></p><h3 id="表格-2"><a class="markdownIt-Anchor" href="#表格-2"></a> 表格</h3><table><tbody>    <tr>        <th rowspan="3">我占了三行</th>        <th><font color="Green">第一列</font></th>        <th>第二列</th>        <th>第三列</th>    </tr>    <tr>        <td bgcolor="Tomato">第一列</td>        <td>第二列</td>        <td>第三列</td>    </tr>    <tr>        <td>第一列</td>        <td>第二列</td>        <td>第三列</td>    </tr></table><h3 id="段首缩进"><a class="markdownIt-Anchor" href="#段首缩进"></a> 段首缩进</h3><p>使用特殊占位符，不同占位符所占空白是不一样大的（请在源码模式下查看）：</p><p>  或者  表示一个半角的空格</p><p>  或者  表示一个全角的空格</p><p>  或者  两个全角的空格（用的比较多）</p><p>  或者  不断行的空白格</p><h3 id="特殊符号"><a class="markdownIt-Anchor" href="#特殊符号"></a> 特殊符号</h3><p>©  ™  &amp;  &lt;  &gt;  £ ¥ € ® ± §  X² Y³ ¾ « » 37.2ºC</p><h2 id="mermaid-图示例"><a class="markdownIt-Anchor" href="#mermaid-图示例"></a> Mermaid 图示例</h2><h3 id="流程图"><a class="markdownIt-Anchor" href="#流程图"></a> 流程图</h3><h4 id="横向流程图"><a class="markdownIt-Anchor" href="#横向流程图"></a> 横向流程图</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mermaid">graph LR<br>A[方形] --&gt;B(圆角)<br>    B --&gt; C&#123;条件a&#125;<br>    C --&gt;|a=1| D[结果1]<br>    C --&gt;|a=2| E[结果2]<br>    F[横向流程图]<br></code></pre></td></tr></table></figure><h4 id="竖向流程图"><a class="markdownIt-Anchor" href="#竖向流程图"></a> 竖向流程图</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mermaid">graph TD<br>A[方形] --&gt; B(圆角)<br>    B --&gt; C&#123;条件a&#125;<br>    C --&gt; |a=1| D[结果1]<br>    C --&gt; |a=2| E[结果2]<br>    F[竖向流程图]<br></code></pre></td></tr></table></figure><h3 id="uml-标准时序图"><a class="markdownIt-Anchor" href="#uml-标准时序图"></a> UML 标准时序图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mermaid">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头<br>  sequenceDiagram<br>    participant 张三<br>    participant 李四<br>    张三-&gt;王五: 王五你好吗？<br>    loop 健康检查<br>        王五-&gt;王五: 与疾病战斗<br>    end<br>    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...<br>    李四--&gt;&gt;张三: 很好!<br>    王五-&gt;李四: 你怎么样?<br>    李四--&gt;王五: 很好!<br></code></pre></td></tr></table></figure><h3 id="甘特图"><a class="markdownIt-Anchor" href="#甘特图"></a> 甘特图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mermaid">%% 语法示例<br>        gantt<br>        dateFormat  YYYY-MM-DD<br>        title 软件开发甘特图<br>        section 设计<br>        需求                      :done,    des1, 2014-01-06,2014-01-08<br>        原型                      :active,  des2, 2014-01-09, 3d<br>        UI设计                     :         des3, after des2, 5d<br>    未来任务                     :         des4, after des3, 5d<br>        section 开发<br>        学习准备理解需求                      :crit, done, 2014-01-06,24h<br>        设计框架                             :crit, done, after des2, 2d<br>        开发                                 :crit, active, 3d<br>        未来任务                              :crit, 5d<br>        耍                                   :2d<br>        section 测试<br>        功能测试                              :active, a1, after des3, 3d<br>        压力测试                               :after a1  , 20h<br>        测试报告                               : 48h<br></code></pre></td></tr></table></figure><h2 id="sequence-图示例"><a class="markdownIt-Anchor" href="#sequence-图示例"></a> sequence 图示例</h2><p>【提示】Obsidian 不支持。</p><h3 id="uml-时序图"><a class="markdownIt-Anchor" href="#uml-时序图"></a> UML 时序图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs sequence">对象A-&gt;对象B: 对象B你好吗?（请求）<br>Note right of 对象B: 对象B的描述<br>Note left of 对象A: 对象A的描述(提示)<br>对象B--&gt;对象A: 我很好(响应)<br>对象A-&gt;对象B: 你真的好吗？<br></code></pre></td></tr></table></figure><h3 id="uml-标准时序图复杂"><a class="markdownIt-Anchor" href="#uml-标准时序图复杂"></a> UML 标准时序图复杂</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs sequence">Title: 标题：复杂使用<br>对象A-&gt;对象B: 对象B你好吗?（请求）<br>Note right of 对象B: 对象B的描述<br>Note left of 对象A: 对象A的描述(提示)<br>对象B--&gt;对象A: 我很好(响应)<br>对象B-&gt;小三: 你好吗<br>小三--&gt;&gt;对象A: 对象B找我了<br>对象A-&gt;对象B: 你真的好吗？<br>Note over 小三,对象B: 我们是朋友<br>participant C<br>Note right of C: 没人陪我玩<br></code></pre></td></tr></table></figure><h2 id="flow-图"><a class="markdownIt-Anchor" href="#flow-图"></a> flow 图</h2><p>流程图代码分两块，上面一块是创建你的流程（创建元素），然后隔一行，创建流程的走向 (连接元素)。</p><ul><li>创建流程（元素）：tag=&gt;type: content:&gt;url<ul><li>tag 是流程图中的标签，在第二段连接元素时会用到。名称可以任意，一般为流程的英文缩写和数字的组合。</li><li>type 用来确定标签的类型，<code>=&gt;</code> 后面表示类型。由于标签的名称可以任意指定，所以要依赖 type 来确定标签的类型（start、end、operation、subroutine、condition、inputoutput）</li><li>content 是流程图文本框中的描述内容，<code>:</code> 后面表示内容，中英文均可。特别注意，<strong>冒号与文本之间一定要有个空格</strong></li><li>url 是一个连接，与框框中的文本相绑定，<code>:&gt;</code> 后面就是对应的 url 链接，点击文本时可以通过链接跳转到 url 指定页面</li></ul></li><li>指向流程 (连接元素)：标识（类别）-&gt;下一个标识<ul><li>使用 -&gt; 来连接两个元素</li><li>对于 condition 类型，有 yes 和 no 两个分支，如示例中的 cond(yes) 和 cond(no)</li><li>每个元素可以制定分支走向，默认向下，也可以用 right 指向右边，如示例中 cond2(yes,right)。</li></ul></li></ul><p>【提示】Obsidian 不支持。</p><h3 id="标准流程图横向"><a class="markdownIt-Anchor" href="#标准流程图横向"></a> 标准流程图（横向）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs flow">st=&gt;start: 开始框<br>op=&gt;operation: 处理框<br>cond=&gt;condition: 判断框(是或否?)<br>sub1=&gt;subroutine: 子流程<br>io=&gt;inputoutput: 输入输出框<br>e=&gt;end: 结束框<br>st(right)-&gt;op(right)-&gt;cond<br>cond(yes)-&gt;io(bottom)-&gt;e<br>cond(no)-&gt;sub1(right)-&gt;op<br></code></pre></td></tr></table></figure><h3 id="标准流程图"><a class="markdownIt-Anchor" href="#标准流程图"></a> 标准流程图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs flow">st=&gt;start: 开始框<br>op=&gt;operation: 处理框<br>cond=&gt;condition: 判断框(是或否?)<br>sub1=&gt;subroutine: 子流程<br>io=&gt;inputoutput: 输入输出框<br>e=&gt;end: 结束框<br>st-&gt;op-&gt;cond<br>cond(yes)-&gt;io-&gt;e<br>cond(no)-&gt;sub1(right)-&gt;op<br></code></pre></td></tr></table></figure><h2 id="plantuml-文本绘图"><a class="markdownIt-Anchor" href="#plantuml-文本绘图"></a> PlantUML 文本绘图</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plantuml">@startuml<br>Bob -&gt; Alice : hello<br>Alice -&gt; Wonderland: hello<br>Wonderland -&gt; next: hello<br>next -&gt; Last: hello<br>Last -&gt; next: hello<br>next -&gt; Wonderland : hello<br>Wonderland -&gt; Alice : hello<br>Alice -&gt; Bob: hello<br>@enduml<br></code></pre></td></tr></table></figure><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://zh.wikipedia.org/wiki/Markdown">Markdown - 维基百科，自由的百科全书 (wikipedia.org)</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>My reference. <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>To add line breaks within a footnote, prefix new lines with 2 spaces.<br />This is a second line. （然而 Typora 不支持这种方式换行） <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
